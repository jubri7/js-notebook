{"version":3,"sources":["../node_modules/prettier sync","redux/action-types/index.ts","hooks/useTypeSelector.ts","bundler/startBundler.ts","redux/reducers/cellsReducer.ts","redux/reducers/bundlesReducer.ts","redux/reducers/index.ts","redux/store.ts","plugins/fetch-plugin.ts","bundler/index.ts","plugins/unpkgpathplugin.ts","redux/action-creators/index.ts","hooks/useAction.ts","components/addCell.tsx","components/actionBar.tsx","components/Preview.tsx","components/resizeableBox.tsx","components/CodeEditor.tsx","components/codeCell.tsx","hooks/useCumalativeCode.ts","components/textEditor.tsx","components/cellListItem.tsx","components/cellList.tsx","components/header.tsx","pictures/react-pic1.jpg","pictures/react-pic2.jpg","pictures/react-pic3.jpg","components/guide.tsx","App.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ActionType","useTypeSelector","useSelector","service","initialState","loading","error","order","data","reducer","produce","state","action","type","UPDATE_CELL","payload","content","MOVE_CELL","direction","index","findIndex","targetIndex","length","INSERT_CELL_BEFORE","cell","randomId","foundIndex","push","splice","DELETE_CELL","filter","Math","random","toString","substr","BUNDLE_START","cellId","err","BUNDLE_COMPLETE","bundle","reducers","combineReducers","cells","cellsReducer","bundles","bundleReducer","store","storage","createStore","applyMiddleware","thunk","fileCache","localForage","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","loader","contents","args","a","getItem","path","cachedResult","axios","get","request","escaped","replace","result","resolveDir","URL","responseURL","pathname","setItem","bundling","rawCode","esbuild","entryPoints","write","plugins","onResolve","namespace","href","define","jsxFactory","jsxFragment","outputFiles","text","message","updateCell","deleteCell","moveCell","insertCellBefore","cellType","createBundle","input","dispatch","useAction","useDispatch","useMemo","bindActionCreators","actionCreator","AddCell","nextCellId","forceVisible","className","onClick","ActionBar","html","Preview","useEffect","iframe","current","srcDoc","timer","setTimeout","contentWindow","postMessage","clearTimeout","useRef","style","backgroundColor","title","ref","sandbox","Resizeable","resizableProps","children","useState","window","innerWidth","setInnerWidth","innerHeight","setInnerHeight","width","setWidth","listener","addEventListener","removeEventListener","minConstraints","Infinity","maxConstraints","height","resizeHandles","onResizeStop","event","size","CodeEditor","initialValue","onChangeEvent","editorRef","onClickHandler","getValue","unformatted","formatted","prettier","format","parser","useTabs","semi","singleQuote","setValue","onMount","editor","monaco","value","theme","language","onChange","options","wordWrap","minimap","enabled","showUnused","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","CodeCell","cumalativeCode","orderedCells","map","c","join","display","flexDirection","max","TextEditor","markDown","editing","setEditing","target","contains","Markdown","source","CellListItem","child","CellList","renderedCells","startService","wasmURL","Header","to","Guide","src","example1","alt","example2","example2a","App","component","ReactDOM","render","document","getElementById"],"mappings":"iFAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,udCRbC,E,yBCGCC,EAAmDC,I,2CDHpDF,K,sBAAAA,E,0BAAAA,E,wCAAAA,E,0BAAAA,E,4BAAAA,E,mCAAAA,M,SEERG,E,QCYEC,EAA2B,CAC/BC,SAAS,EACTC,MAAO,KACPC,MAAO,GACPC,KAAM,IAGFC,EAAUC,aAAQ,WAAuD,IAAtDC,EAAqD,uDAAjCP,EAAcQ,EAAmB,uCAC5E,OAAQA,EAAOC,MACb,KAAKb,EAAWc,YACd,MAAwBF,EAAOG,QAAvBhB,EAAR,EAAQA,GAAIiB,EAAZ,EAAYA,QAEZ,OADAL,EAAMH,KAAKT,GAAIiB,QAAUA,EAClBL,EACT,KAAKX,EAAWiB,UACd,IAAQC,EAAcN,EAAOG,QAArBG,UACFC,EAAQR,EAAMJ,MAAMa,WAAU,SAACrB,GAAD,OAAQA,IAAOa,EAAOG,QAAQhB,MAC5DsB,EAA4B,OAAdH,EAAqBC,EAAQ,EAAIA,EAAQ,EAE7D,OAAIE,EAAc,GAAKA,GAAeV,EAAMJ,MAAMe,SAElDX,EAAMJ,MAAMY,GAASR,EAAMJ,MAAMc,GACjCV,EAAMJ,MAAMc,GAAeT,EAAOG,QAAQhB,IAHuBY,EAKnE,KAAKX,EAAWuB,mBACd,IAAMC,EAAa,CACjBR,QAAS,GACTH,KAAMD,EAAOG,QAAQF,KACrBd,GAAI0B,KAGNd,EAAMH,KAAKgB,EAAKzB,IAAMyB,EAEtB,IAAME,EAAaf,EAAMJ,MAAMa,WAC7B,SAACrB,GAAD,OAAQA,IAAOa,EAAOG,QAAQhB,MAShC,OANI2B,EAAa,EACff,EAAMJ,MAAMoB,KAAKH,EAAKzB,IAEtBY,EAAMJ,MAAMqB,OAAOF,EAAY,EAAGF,EAAKzB,IAGlCY,EACT,KAAKX,EAAW6B,YAGd,cAFOlB,EAAMH,KAAKI,EAAOG,SACzBJ,EAAMJ,MAAQI,EAAMJ,MAAMuB,QAAO,SAAC/B,GAAD,OAAQA,IAAOa,EAAOG,WAChDJ,EACT,QACE,OAAOA,KAEVP,GAEGqB,EAAW,WACf,OAAOM,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,IAG/BzB,ICxDTL,EAA6B,GAyBpBK,EAvBCC,aACd,WAAuE,IAAtEC,EAAqE,uDAA/CP,EAAcQ,EAAiC,uCACpE,OAAQA,EAAOC,MACb,KAAKb,EAAWmC,aAMd,OALAxB,EAAMC,EAAOG,QAAQqB,QAAU,CAC7B/B,SAAS,EACTX,KAAM,GACN2C,IAAK,IAEA1B,EACT,KAAKX,EAAWsC,gBAMd,OALA3B,EAAMC,EAAOG,QAAQqB,QAAU,CAC7B/B,SAAS,EACTX,KAAMkB,EAAOG,QAAQwB,OAAO7C,KAC5B2C,IAAKzB,EAAOG,QAAQwB,OAAOF,KAEtB1B,EACT,QACE,OAAOA,MCzBA6B,EALEC,YAAgB,CAC/BC,MAAOC,EACPC,QAASC,I,SCKEC,G,OAHXC,EAGmBC,YAAYR,EAAU,GAAIS,YAAgBC,O,0DCPzDC,E,OAAYC,EAAYC,eAAe,CAC3CC,KAAM,cAGKC,EAAc,SAACC,GAC1B,MAAO,CACLF,KAAM,eACNG,MAFK,SAECC,GACJA,EAAMC,OAAO,CAAE7B,OAAQ,kBAAmB,WACxC,MAAO,CACL8B,OAAQ,MACRC,SAAUL,MAIdE,EAAMC,OAAO,CAAE7B,OAAQ,MAAvB,uCAA+B,WAAOgC,GAAP,eAAAC,EAAA,sEACFZ,EAAUa,QACnCF,EAAKG,MAFsB,YACvBC,EADuB,iDAMpBA,GANoB,2CAA/B,uDAUAR,EAAMC,OAAO,CAAE7B,OAAQ,SAAvB,uCAAkC,WAAOgC,GAAP,yBAAAC,EAAA,sEACAI,IAAMC,IAAIN,EAAKG,MADf,uBACxBzD,EADwB,EACxBA,KAAM6D,EADkB,EAClBA,QACRC,EAAU9D,EACb+D,QAAQ,MAAO,IACfA,QAAQ,KAAM,OACdA,QAAQ,KAAM,OACXV,EAN0B,mGAQTS,EARS,6DAY1BE,EAA+B,CACnCZ,OAAQ,MACRC,WACAY,WAAY,IAAIC,IAAI,KAAML,EAAQM,aAAaC,UAfjB,UAiB1BzB,EAAU0B,QAAQf,EAAKG,KAAMO,GAjBH,iCAmBzBA,GAnByB,4CAAlC,uDAsBAd,EAAMC,OAAO,CAAE7B,OAAQ,MAAvB,uCAA+B,WAAOgC,GAAP,qBAAAC,EAAA,sEACGI,IAAMC,IAAIN,EAAKG,MADlB,uBACrBzD,EADqB,EACrBA,KAAM6D,EADe,EACfA,QAERG,EAA+B,CACnCZ,OAAQ,MACRC,SAAUrD,EACViE,WAAY,IAAIC,IAAI,KAAML,EAAQM,aAAaC,UANpB,SAQvBzB,EAAU0B,QAAQf,EAAKG,KAAMO,GARN,gCAUtBA,GAVsB,2CAA/B,0DC3BSM,EApBD,uCAAG,WAAOC,GAAP,eAAAhB,EAAA,+EAEMiB,IAAc,CAC/BC,YAAa,CAAC,YACd1C,QAAQ,EACR2C,OAAO,EACPC,QAAS,CCPN,CACL7B,KAAM,oBACNG,MAFK,SAECC,GACJA,EAAM0B,UAAU,CAAEtD,OAAQ,kBAAmB,WAC3C,MAAO,CAAEmC,KAAM,WAAYoB,UAAW,QAGxC3B,EAAM0B,UAAU,CAAEtD,OAAQ,WAAY,SAACgC,GACrC,MAAO,CACLuB,UAAW,IACXpB,KAAM,IAAIS,IAAIZ,EAAKG,KAAM,oBAAsBH,EAAKW,WAAa,KAC9Da,SAIP5B,EAAM0B,UAAU,CAAEtD,OAAQ,MAA1B,uCAAkC,WAAOgC,GAAP,SAAAC,EAAA,+EACzB,CACLsB,UAAW,IACXpB,KAAK,qBAAD,OAAuBH,EAAKG,QAHF,2CAAlC,yDDR6BV,EAAYwB,IACzCQ,OAAQ,CACN,uBAAwB,gBAE1BC,WAAY,uBACZC,YAAa,oBAXF,cAETjB,EAFS,yBAcN,CAAE9E,KAAM8E,EAAOkB,YAAY,GAAGC,KAAMtD,IAAK,KAdnC,yDAgBN,CAAE3C,KAAM,GAAI2C,IAAK,KAAMuD,UAhBjB,yDAAH,sDESDC,EAAa,SAAC9F,EAAYiB,GACrC,MAAO,CACLH,KAAMb,EAAWc,YACjBC,QAAS,CACPhB,KACAiB,aAKO8E,EAAa,SAAC/F,GACzB,MAAO,CACLc,KAAMb,EAAW6B,YACjBd,QAAShB,IAIAgG,EAAW,SAAChG,EAAYmB,GACnC,MAAO,CACLL,KAAMb,EAAWiB,UACjBF,QAAS,CACPhB,KACAmB,eAKO8E,EAAmB,SAC9BjG,EACAkG,GAEA,MAAO,CACLpF,KAAMb,EAAWuB,mBACjBR,QAAS,CACPhB,KACAc,KAAMoF,KAKCC,EAAe,SAAC9D,EAAgB+D,GAC3C,8CAAO,WAAOC,GAAP,eAAArC,EAAA,6DACLqC,EAAS,CACPvF,KAAMb,EAAWmC,aACjBpB,QAAS,CACPqB,YAJC,SAQgB0C,EAASqB,GARzB,OAQC3B,EARD,OAUL4B,EAAS,CACPvF,KAAMb,EAAWsC,gBACjBvB,QAAS,CACPqB,SACAG,OAAQiC,KAdP,2CAAP,uDCjDW6B,EAAY,WACvB,IAAMD,EAAWE,cAEjB,OAAOC,mBAAQ,WACb,OAAOC,YAAmBC,EAAeL,KACxC,CAACA,K,OCuBSM,EAxB0B,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,WAAWC,EAAiB,EAAjBA,aAC3CZ,EAAoBK,IAApBL,iBAEP,OACI,sBAAKa,UAAS,mBAAcD,GAAgB,iBAA5C,UACI,sBAAKC,UAAU,cAAf,UACA,yBAAQA,UAAU,wCAAwCC,QAAS,kBAAId,EAAiBW,EAAW,SAAnG,UACI,sBAAME,UAAU,gBAAhB,SACI,mBAAGA,UAAU,kBAEjB,2CAEJ,yBAAQA,UAAU,wCAAwCC,QAAS,kBAAId,EAAiBW,EAAW,SAAnG,UACI,sBAAME,UAAU,gBAAhB,SACI,mBAAGA,UAAU,kBAEjB,8CAGJ,qBAAKA,UAAU,gBCAZE,G,cArB6B,SAAC,GAAU,IAAThH,EAAQ,EAARA,GAC1C,EAA8BsG,IAAvBP,EAAP,EAAOA,WAAWC,EAAlB,EAAkBA,SAClB,OAAO,sBAAKc,UAAU,aAAf,UACH,wBAAQA,UAAU,6BAA6BC,QAAS,kBAAIf,EAAShG,EAAG,OAAxE,SACI,sBAAM8G,UAAU,OAAhB,SACI,mBAAGA,UAAU,wBAGrB,wBAAQA,UAAU,6BAA6BC,QAAS,kBAAIf,EAAShG,EAAG,SAAxE,SACI,sBAAM8G,UAAU,OAAhB,SACI,mBAAGA,UAAU,0BAGrB,wBAAQA,UAAU,6BAA6BC,QAAS,kBAAIhB,EAAW/F,IAAvE,SACI,sBAAM8G,UAAU,OAAhB,SACI,mBAAGA,UAAU,0BCfvBG,G,cAAI,ujBAsDKC,EAzByB,SAAC,GAAmB,IAAjBvH,EAAgB,EAAhBA,KAAM2C,EAAU,EAAVA,IAC/C6E,qBAAU,WACRC,EAAOC,QAAQC,OAASL,EACxB,IAAIM,EAAMC,YAAW,WACnBJ,EAAOC,QAAQI,cAAcC,YAAY/H,EAAM,OAC9C,IACH,OAAO,WACLgI,aAAaJ,MAEd,CAAC5H,EAAK2C,IACT,IAAM8E,EAASQ,mBACf,OACE,sBAAKd,UAAU,kBAAf,UACE,wBACEe,MAAO,CAAEC,gBAAiB,SAC1BC,MAAM,UACNC,IAAKZ,EACLa,QAAQ,gBACRX,OAAQL,IAET3E,GAAO,qBAAKwE,UAAU,gBAAf,SAAgCxE,Q,yBCC/B4F,G,OAjD+B,SAAC,GAA6B,IAuBtEC,EAvB2ChH,EAA0B,EAA1BA,UAAWiH,EAAe,EAAfA,SAC1D,EAAmCC,mBAASC,OAAOC,YAAnD,mBAAOA,EAAP,KAAkBC,EAAlB,KACA,EAAqCH,mBAASC,OAAOG,aAArD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAyBL,mBAA6B,IAApBC,OAAOC,YAAzC,mBAAOI,EAAP,KAAaC,EAAb,KA2CA,OA1CAzB,qBAAU,WACR,IAAII,EACEsB,EAAW,WACZtB,GACDI,aAAaJ,GAEfA,EAAQC,YAAW,WACjBgB,EAAcF,OAAOC,YACrBG,EAAeJ,OAAOG,aACC,IAApBH,OAAOC,WAAmBI,GAC3BC,EAA6B,IAApBN,OAAOC,cAElB,MAGJ,OADAD,OAAOQ,iBAAiB,SAASD,GAC1B,WACLP,OAAOS,oBAAoB,SAASF,MAEtC,CAACF,IAIDR,EADgB,eAAdhH,EACe,CACf2F,UAAW,oBACXkC,eAAgB,CAAc,GAAbT,EAAiBU,KAClCC,eAAgB,CAAc,IAAbX,EAAkBU,KACnCE,OAAQF,IACRN,QACAS,cAAe,CAAC,KAChBC,aAAc,SAACC,EAAM7I,GACnBmI,EAASnI,EAAK8I,KAAKZ,SAIN,CACfK,eAAgB,CAACC,IAAU,IAC3BC,eAAgB,CAACD,IAAwB,GAAdR,GAC3BE,MAAOM,IACPE,OAAQ,IACRC,cAAe,CAAC,MAGb,cAAC,eAAD,2BAAkBjB,GAAlB,aAAmCC,O,qDCS7BoB,EApD+B,SAAC,GAGxC,IAFLC,EAEI,EAFJA,aACAC,EACI,EADJA,cAEMC,EAAY/B,iBAAY,MAOxBgC,EAAc,uCAAG,8BAAA5F,EAAA,sEACK2F,EAAUtC,QAAQwC,WADvB,cACfC,EADe,OAEfC,EAAYC,IACfC,OAAOH,EAAa,CACnBI,OAAQ,QACR9E,QAAS,CAAC8E,KACVC,SAAS,EACTC,MAAM,EACNC,aAAa,IACZ7F,QAAQ,MAAM,IATE,SAUfmF,EAAUtC,QAAQiD,SAASP,GAVZ,2CAAH,qDAYpB,OACE,sBAAKjD,UAAU,iBAAf,UACE,wBACEA,UAAU,2CACVC,QAAS6C,EAFX,oBAMA,cAAC,IAAD,CACEW,QAxBgC,SAACC,EAAQC,GAC7Cd,EAAUtC,QAAUmD,GAwBhBE,MAAOjB,EACPkB,MAAM,UACNC,SAAS,aACTzB,OAAO,OACP0B,SAhC+B,SAACH,EAAOpB,GAC3CI,EAAcgB,IAgCVI,QAAS,CACPC,SAAU,KACVC,QAAS,CAAEC,SAAS,GACpBC,YAAY,EACZC,oBAAqB,EACrBC,SAAU,GACVC,sBAAsB,EACtBC,iBAAiB,S,SCSZC,GAnD2B,SAAC,GAAc,ICZvBlJ,EDYWZ,EAAW,EAAXA,KAC3C,EAAqC6E,IAA7BR,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,aACd3D,EAAStC,GACb,SAACU,GAAD,OAAWA,EAAMiC,SAAWjC,EAAMiC,QAAQpB,EAAKzB,OAE3CwL,GCjB0BnJ,EDiBSZ,EAAKzB,GChBvCE,GAAgB,SAACU,GACtB,IADgC,EAChC,EAAwBA,EAAM+B,MAAtBlC,EAAR,EAAQA,KACFgL,EADN,EAAcjL,MACakL,KAAI,SAAC1L,GAAD,OAAQS,EAAKT,MAoBtCwL,EAAiB,GAtBS,eAuBlBC,GAvBkB,IAuBhC,2BAA4B,CAAC,IAApBE,EAAmB,QAS1B,GARe,SAAXA,EAAE7K,OACA6K,EAAE3L,KAAOqC,EACXmJ,EAAe5J,KAtBP,ufAwBR4J,EAAe5J,KAPA,uBASjB4J,EAAe5J,KAAK+J,EAAE1K,UAEpB0K,EAAE3L,KAAOqC,EACX,OAjC4B,8BAoChC,OAAOmJ,KACNI,KAAK,ODJR,OAdAzE,qBAAU,WACR,GAAI3E,EAAJ,CAIA,IAAM+E,EAAQC,WAAU,sBAAC,sBAAAxD,EAAA,sDACvBmC,EAAa1E,EAAKzB,GAAIwL,GADC,2CAEtB,KACH,OAAO,WACL7D,aAAaJ,IAPbpB,EAAa1E,EAAKzB,GAAGwL,KAStB,CAAC/J,EAAKzB,GAAIwL,EAAgBrF,IAI3B,cAAC,EAAD,CAAYhF,UAAU,WAAtB,SACE,sBACE0G,MAAO,CACLsB,OAAQ,oBACR0C,QAAS,OACTC,cAAe,OAJnB,UAOE,cAAC,EAAD,CAAY3K,UAAU,aAAtB,SACE,cAAC,EAAD,CACEuI,cAAe,SAACgB,GAAD,OAAW5E,EAAWrE,EAAKzB,GAAI0K,IAC9CjB,aAAchI,EAAKR,aAGrBuB,GAAUA,EAAOlC,QACjB,qBAAKwG,UAAU,iBAAf,SACE,0BAAUA,UAAU,+BAA+BiF,IAAI,MAAvD,uBAKF,cAAC,EAAD,CAASpM,KAAM6C,EAAO7C,KAAM2C,IAAKE,EAAOF,Y,SEAnC0J,I,OAhD+B,SAAC,GAAY,IAAXvK,EAAU,EAAVA,KACtC+I,EAAS5C,mBACTqE,EAAWrE,mBACjB,EAA6BS,oBAAS,GAAtC,mBAAO6D,EAAP,KAAeC,EAAf,KACOrG,EAAcQ,IAAdR,WACPqB,qBAAU,WACN,IAAI0B,EAaJ,OAZAA,EAAW,SAACS,GACLkB,EAAOnD,SAAWiC,EAAM8C,QAAU5B,EAAOnD,QAAQgF,SAAS/C,EAAM8C,UAE1DH,EAAS5E,SAAWiC,EAAM8C,QAAUH,EAAS5E,QAAQgF,SAAS/C,EAAM8C,QACzED,GAAW,GAGXA,GAAW,KAGnB7D,OAAOQ,iBAAiB,QAAQD,GAEzB,WACHP,OAAOS,oBAAoB,QAAQF,MAEzC,CAACpH,EAAKR,UASR,OAAGiL,EACC,qBAAKlE,IAAKwC,EAAQ1D,UAAU,cAA5B,SACE,cAAC,KAAD,CACE4D,MAAOjJ,EAAKR,QACZ4J,SAZc,SAACjF,GAKfE,EAAWrE,EAAKzB,GAJhB4F,GACmB,2BAenB,sBAAKkB,UAAU,eAAekB,IAAKiE,EAAnC,UACE,cAAC,KAASK,SAAV,CAAmBC,OAAQ9K,EAAKR,UAChC,qBAAK6F,UAAU,cAAf,qCCZC0F,GA9BmC,SAAC,GAAc,IAC3DC,EAD+ChL,EAAW,EAAXA,KAqBnD,OAlBEgL,EADgB,SAAdhL,EAAKX,KAEL,qCACE,qBAAKgG,UAAU,qBAAf,SACE,cAAC,EAAD,CAAW9G,GAAIyB,EAAKzB,OAEtB,cAAC,GAAD,CAAUyB,KAAMA,OAKpB,qCACA,8BACA,cAAC,GAAD,CAAYA,KAAMA,MAElB,cAAC,EAAD,CAAWzB,GAAIyB,EAAKzB,QAKpB,sBAAK8G,UAAU,iBAAf,UACG2F,EACD,cAAC,EAAD,CAAWzM,GAAIyB,EAAKzB,KACpB,2BCrBS0M,GAXa,WACxB,IACMC,EADQzM,GAAgB,oBAAEyC,MAAOnC,EAAT,EAASA,MAAMC,EAAf,EAAeA,KAAf,OAAwBD,EAAMkL,KAAI,SAAA1L,GAAE,OAAES,EAAKT,SAC7C0L,KAAI,SAAAjK,GAAI,OAAI,gCAAmB,cAAC,EAAD,CAASoF,cAAc,EAAOD,WAAYnF,EAAKzB,KAAlE,IAAwE,cAAC,GAAD,CAAcyB,KAAMA,MAAlFA,EAAKzB,OACvD,OACA,gCACK2M,EACD,cAAC,EAAD,CAAS9F,cAAc,EAAMD,WAAY,WnBIlCgG,GATG,uCAAG,sBAAA5I,EAAA,yDACd5D,EADc,gCAED6E,IAAmB,CACjC4H,QAAS,kBAHM,OAEjBzM,EAFiB,kDAAH,qD,SoBWH0M,GAVwB,WACnC,OAAO,8BACH,gCACA,cAAC,KAAD,CAASC,GAAG,IAAZ,kBACA,uBACA,cAAC,KAAD,CAASA,GAAG,SAAZ,iC,SCVO,OAA0B,uCCA1B,OAA0B,uCCA1B,OAA0B,uCCe1BC,GAXS,WACpB,OAAO,0JAEH,qBAAKC,IAAKC,GAAUC,IAAI,aAFrB,+FAIH,qBAAKF,IAAKG,GAAUD,IAAI,aACxB,uBACA,qBAAKF,IAAKI,GAAWF,IAAI,iBCYlBG,GAfH,WAIV,OAHAnG,qBAAU,WACRyF,OACA,IAEA,gCACE,cAAC,GAAD,IACA,eAAC,KAAD,WACA,cAAC,KAAD,CAAO1I,KAAK,SAASqJ,UAAWP,KAChC,cAAC,KAAD,CAAO9I,KAAK,IAAIqJ,UAAWb,YCTjCc,IAASC,OACP,cAAC,IAAD,CAAU1K,MAAOA,EAAjB,SACI,cAAC,KAAD,UACE,cAAC,GAAD,QAGN2K,SAASC,eAAe,W","file":"static/js/main.959357df.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 116;","export enum ActionType {\r\n  MOVE_CELL = \"move_cell\",\r\n  DELETE_CELL = \"delete_cell\",\r\n  INSERT_CELL_BEFORE = \"insert_cell_before\",\r\n  UPDATE_CELL = \"update_cell\",\r\n  BUNDLE_START = \"bundle-start\",\r\n  BUNDLE_COMPLETE = \"bundle-complete\",\r\n}\r\n","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport { RootState } from \"../redux\";\r\n\r\nexport const useTypeSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import * as esbuild from \"esbuild-wasm/esm/browser\";\r\n\r\nlet service: any;\r\n\r\nconst startService = async () => {\r\n  if (!service) {\r\n    service = await esbuild.initialize({\r\n      wasmURL: \"/esbuild.wasm\",\r\n      // \"https://unpkg.com/esbuild-wasm/esbuild.wasm\"\r\n    });\r\n  }\r\n};\r\n\r\nexport default startService;\r\n","import { ActionType } from \"../action-types\";\r\nimport { Action } from \"../actions\";\r\nimport { Cell } from \"../cells\";\r\nimport produce from \"immer\";\r\n\r\ninterface CellsState {\r\n  loading: boolean;\r\n  error: string | null;\r\n  order: string[];\r\n  data: {\r\n    [key: string]: Cell;\r\n  };\r\n}\r\n\r\nconst initialState: CellsState = {\r\n  loading: false,\r\n  error: null,\r\n  order: [],\r\n  data: {},\r\n};\r\n\r\nconst reducer = produce((state: CellsState = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.UPDATE_CELL:\r\n      const { id, content } = action.payload;\r\n      state.data[id].content = content;\r\n      return state;\r\n    case ActionType.MOVE_CELL:\r\n      const { direction } = action.payload;\r\n      const index = state.order.findIndex((id) => id === action.payload.id);\r\n      const targetIndex = direction === \"up\" ? index - 1 : index + 1;\r\n\r\n      if (targetIndex < 0 || targetIndex >= state.order.length) return state;\r\n\r\n      state.order[index] = state.order[targetIndex];\r\n      state.order[targetIndex] = action.payload.id;\r\n      return state;\r\n    case ActionType.INSERT_CELL_BEFORE:\r\n      const cell: Cell = {\r\n        content: \"\",\r\n        type: action.payload.type,\r\n        id: randomId(),\r\n      };\r\n\r\n      state.data[cell.id] = cell;\r\n\r\n      const foundIndex = state.order.findIndex(\r\n        (id) => id === action.payload.id\r\n      );\r\n\r\n      if (foundIndex < 0) {\r\n        state.order.push(cell.id);\r\n      } else {\r\n        state.order.splice(foundIndex, 0, cell.id);\r\n      }\r\n\r\n      return state;\r\n    case ActionType.DELETE_CELL:\r\n      delete state.data[action.payload];\r\n      state.order = state.order.filter((id) => id !== action.payload);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}, initialState);\r\n\r\nconst randomId = () => {\r\n  return Math.random().toString(36).substr(2, 5);\r\n};\r\n\r\nexport default reducer;\r\n","import produce from \"immer\";\r\nimport { ActionType } from \"../action-types\";\r\nimport { Action } from \"../actions\";\r\n\r\ninterface BundlesState {\r\n  [key: string]:\r\n    | {\r\n        loading: boolean;\r\n        code: string;\r\n        err: string;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nconst initialState: BundlesState = {};\r\n\r\nconst reducer = produce(\r\n  (state: BundlesState = initialState, action: Action): BundlesState => {\r\n    switch (action.type) {\r\n      case ActionType.BUNDLE_START:\r\n        state[action.payload.cellId] = {\r\n          loading: true,\r\n          code: \"\",\r\n          err: \"\",\r\n        };\r\n        return state;\r\n      case ActionType.BUNDLE_COMPLETE:\r\n        state[action.payload.cellId] = {\r\n          loading: false,\r\n          code: action.payload.bundle.code,\r\n          err: action.payload.bundle.err,\r\n        };\r\n        return state;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cellsReducer from \"./cellsReducer\";\r\nimport bundleReducer from \"./bundlesReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  cells: cellsReducer,\r\n  bundles: bundleReducer,\r\n});\r\n\r\nexport default reducers;\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\r\n","import * as esbuild from \"esbuild-wasm\";\r\nimport axios from \"axios\";\r\nimport localForage from \"localforage\";\r\n\r\nconst fileCache = localForage.createInstance({\r\n  name: \"filecache\",\r\n});\r\n\r\nexport const fetchPlugin = (inputCode: string) => {\r\n  return {\r\n    name: \"fetch-plugin\",\r\n    setup(build: esbuild.PluginBuild) {\r\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          loader: \"jsx\",\r\n          contents: inputCode,\r\n        };\r\n      });\r\n\r\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\r\n          args.path\r\n        );\r\n\r\n        if (cachedResult) {\r\n          return cachedResult;\r\n        }\r\n      });\r\n\r\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        const escaped = data\r\n          .replace(/\\n/g, \"\")\r\n          .replace(/\"/g, '\\\\\"')\r\n          .replace(/'/g, \"\\\\'\");\r\n        const contents = `\r\n          const style = document.createElement('style');\r\n          style.innerText = '${escaped}';\r\n          document.head.appendChild(style);\r\n        `;\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: \"jsx\",\r\n          contents,\r\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\r\n        };\r\n        await fileCache.setItem(args.path, result);\r\n\r\n        return result;\r\n      });\r\n\r\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n        const { data, request } = await axios.get(args.path);\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: \"jsx\",\r\n          contents: data,\r\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\r\n        };\r\n        await fileCache.setItem(args.path, result);\r\n\r\n        return result;\r\n      });\r\n    },\r\n  };\r\n};\r\n","import * as esbuild from \"esbuild-wasm/esm/browser\";\r\nimport { unpkgPathPlugin } from \"../plugins/unpkgpathplugin\";\r\nimport { fetchPlugin } from \"../plugins/fetch-plugin\";\r\n\r\nconst bundling = async (rawCode: string) => {\r\n  try {\r\n    let result = await esbuild.build({\r\n      entryPoints: [\"index.js\"],\r\n      bundle: true,\r\n      write: false,\r\n      plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\r\n      define: {\r\n        \"process.env.NODE_ENV\": \"'production'\",\r\n      },\r\n      jsxFactory: \"_React.createElement\",\r\n      jsxFragment: \"_React.Fragment\",\r\n    });\r\n\r\n    return { code: result.outputFiles[0].text, err: \"\" };\r\n  } catch (error: any) {\r\n    return { code: \"\", err: error.message };\r\n  }\r\n};\r\n\r\nexport default bundling;\r\n","import * as esbuild from \"esbuild-wasm\";\r\n\r\nexport const unpkgPathPlugin = () => {\r\n  return {\r\n    name: \"unpkg-path-plugin\",\r\n    setup(build: esbuild.PluginBuild) {\r\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\r\n        return { path: \"index.js\", namespace: \"a\" };\r\n      });\r\n\r\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\r\n        return {\r\n          namespace: \"a\",\r\n          path: new URL(args.path, \"https://unpkg.com\" + args.resolveDir + \"/\")\r\n            .href,\r\n        };\r\n      });\r\n\r\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\r\n        return {\r\n          namespace: \"a\",\r\n          path: `https://unpkg.com/${args.path}`,\r\n        };\r\n      });\r\n    },\r\n  };\r\n};\r\n","import { ActionType } from \"../action-types\";\r\nimport { Dispatch } from \"redux\";\r\nimport {\r\n  Action,\r\n  UpdateCellAction,\r\n  DeleteCellAction,\r\n  MoveCellAction,\r\n  InsertCellBeforeAction,\r\n  Direction,\r\n} from \"../actions\";\r\nimport { CellTypes } from \"../cells\";\r\nimport bundling from \"../../bundler\";\r\n\r\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\r\n  return {\r\n    type: ActionType.UPDATE_CELL,\r\n    payload: {\r\n      id,\r\n      content,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteCell = (id: string): DeleteCellAction => {\r\n  return {\r\n    type: ActionType.DELETE_CELL,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\r\n  return {\r\n    type: ActionType.MOVE_CELL,\r\n    payload: {\r\n      id,\r\n      direction,\r\n    },\r\n  };\r\n};\r\n\r\nexport const insertCellBefore = (\r\n  id: string | null,\r\n  cellType: CellTypes\r\n): InsertCellBeforeAction => {\r\n  return {\r\n    type: ActionType.INSERT_CELL_BEFORE,\r\n    payload: {\r\n      id,\r\n      type: cellType,\r\n    },\r\n  };\r\n};\r\n\r\nexport const createBundle = (cellId: string, input: string) => {\r\n  return async (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.BUNDLE_START,\r\n      payload: {\r\n        cellId,\r\n      },\r\n    });\r\n\r\n    const result = await bundling(input);\r\n\r\n    dispatch({\r\n      type: ActionType.BUNDLE_COMPLETE,\r\n      payload: {\r\n        cellId,\r\n        bundle: result,\r\n      },\r\n    });\r\n  };\r\n};\r\n","import { useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreator } from \"../redux\";\r\n\r\nexport const useAction = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return useMemo(() => {\r\n    return bindActionCreators(actionCreator, dispatch);\r\n  }, [dispatch]);\r\n};\r\n","import \"./addCell.css\"\r\nimport {useAction} from \"../hooks/useAction\"\r\n\r\n\r\ninterface AddCellProps{\r\n    nextCellId:string | null\r\n    forceVisible:boolean\r\n    }\r\n\r\nconst AddCell : React.FC<AddCellProps> = ({nextCellId,forceVisible}) =>{\r\n    const {insertCellBefore} = useAction()\r\n\r\n    return(\r\n        <div className={`add-cell ${forceVisible && \"force-visible\"}`}>\r\n            <div className=\"add-buttons\">\r\n            <button className=\"button is-rounded is-primary is-small\" onClick={()=>insertCellBefore(nextCellId,\"code\")}>\r\n                <span className=\"icon is-small\">\r\n                    <i className=\"fas fa-plus\"></i>\r\n                </span>\r\n                <span>Code</span>\r\n                </button>\r\n            <button className=\"button is-rounded is-primary is-small\" onClick={()=>insertCellBefore(nextCellId,\"text\")}>\r\n                <span className=\"icon is-small\">\r\n                    <i className=\"fas fa-plus\"></i>\r\n                </span>\r\n                <span>Text</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCell","import \"./actionBar.css\"\r\nimport {useAction} from \"../hooks/useAction\"\r\n\r\ninterface ActionBarProps{\r\n    id:string\r\n}\r\n\r\nconst ActionBar: React.FC<ActionBarProps> = ({id}) => {\r\n    const {deleteCell,moveCell} = useAction()\r\n    return <div className=\"action-bar\">\r\n        <button className=\"button is-primary is-small\" onClick={()=>moveCell(id,\"up\")}>\r\n            <span className=\"icon\">\r\n                <i className=\"fas fa-arrow-up\"></i>\r\n            </span>\r\n        </button>\r\n        <button className=\"button is-primary is-small\" onClick={()=>moveCell(id,\"down\")}>\r\n            <span className=\"icon\">\r\n                <i className=\"fas fa-arrow-down\"></i>\r\n            </span>\r\n        </button>\r\n        <button className=\"button is-primary is-small\" onClick={()=>deleteCell(id)}>\r\n            <span className=\"icon\">\r\n                <i className=\"fas fa-times\"></i>\r\n            </span>\r\n        </button>\r\n    </div>\r\n}\r\n\r\nexport default ActionBar","import \"./preview.css\";\r\nimport { useEffect, useRef } from \"react\";\r\ninterface PreviewProps {\r\n  code: string;\r\n  err: string;\r\n}\r\n\r\nconst html = `<html>\r\n<head>\r\n<style>html {background-color: white;}</style>\r\n</head>\r\n<body>\r\n<div id=root></div>\r\n<script>\r\nconst handleError = (err) => {\r\n  let root= document.querySelector('#root')\r\n  root.innerHTML = '<div style=\"color:red\"><h4>Runtime error</h4>'+ err + '</div>'\r\n  console.error(err)\r\n}\r\n\r\nwindow.addEventListener('error',(event)=>{\r\n  event.preventDefault()\r\n  handleError(event.error)\r\n})\r\n\r\nwindow.addEventListener('message',(event)=>{\r\n  try{\r\n    eval(event.data)\r\n  }catch(err){\r\n    handleError(err)\r\n  }\r\n},false)</script>\r\n</body>\r\n</html>\r\n`;\r\n\r\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\r\n  useEffect(() => {\r\n    iframe.current.srcDoc = html;\r\n    let timer=setTimeout(() => {\r\n      iframe.current.contentWindow.postMessage(code, \"*\");\r\n    }, 50);\r\n    return ()=>{\r\n      clearTimeout(timer)\r\n    }\r\n  }, [code,err]);\r\n  const iframe = useRef<any>();\r\n  return (\r\n    <div className=\"preview-wrapper\">\r\n      <iframe\r\n        style={{ backgroundColor: \"white\" }}\r\n        title=\"preview\"\r\n        ref={iframe}\r\n        sandbox=\"allow-scripts\"\r\n        srcDoc={html}\r\n      />\r\n      {err && <div className=\"preview-error\">{err}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import { useEffect, useState } from \"react\";\r\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\r\nimport \"./resizeableBox.css\";\r\n\r\ninterface ResizeableProps {\r\n  direction: \"horizontal\" | \"vertical\";\r\n}\r\n\r\nconst Resizeable: React.FC<ResizeableProps> = ({ direction, children }) => {\r\n  const [innerWidth,setInnerWidth] = useState(window.innerWidth)\r\n  const [innerHeight,setInnerHeight] = useState(window.innerHeight)\r\n  const [width,setWidth] = useState(window.innerWidth * .75)\r\n  useEffect(()=>{\r\n    let timer: any\r\n    const listener = () =>{\r\n      if(timer){\r\n        clearTimeout(timer)\r\n      }\r\n      timer = setTimeout(()=>{\r\n        setInnerWidth(window.innerWidth)\r\n        setInnerHeight(window.innerHeight)\r\n        if(window.innerWidth * .75 < width){\r\n          setWidth(window.innerWidth * .75)\r\n        }\r\n      },100)\r\n    }\r\n    window.addEventListener(\"resize\",listener)\r\n    return () =>{\r\n      window.removeEventListener(\"resize\",listener)\r\n    }\r\n  },[width])\r\n  let resizableProps: ResizableBoxProps;\r\n\r\n  if (direction === \"horizontal\") {\r\n    resizableProps = {\r\n      className: \"resize-horizontal\",\r\n      minConstraints: [innerWidth * .2, Infinity],\r\n      maxConstraints: [innerWidth * .75, Infinity],\r\n      height: Infinity,\r\n      width,\r\n      resizeHandles: [\"e\"],\r\n      onResizeStop: (event,data) =>{\r\n        setWidth(data.size.width)\r\n      }\r\n    };\r\n  } else {\r\n    resizableProps = {\r\n      minConstraints: [Infinity, 30],\r\n      maxConstraints: [Infinity, innerHeight * 0.9],\r\n      width: Infinity,\r\n      height: 300,\r\n      resizeHandles: [\"s\"],\r\n    };\r\n  }\r\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\r\n};\r\n\r\nexport default Resizeable;\r\n","import \"./CodeEditor.css\";\r\nimport Editor, { OnChange, OnMount } from \"@monaco-editor/react\";\r\nimport prettier from \"prettier\";\r\nimport parser from \"prettier/parser-babel\";\r\nimport { useRef } from \"react\";\r\n\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChangeEvent(value: string): void;\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({\r\n  initialValue,\r\n  onChangeEvent,\r\n}) => {\r\n  const editorRef = useRef<any>(null);\r\n  const handleEditorChange: OnChange = (value, event) => {\r\n    onChangeEvent(value!);\r\n  };\r\n  const handleEditorDidMount: OnMount = (editor, monaco) => {\r\n    editorRef.current = editor;\r\n  };\r\n  const onClickHandler = async () => {\r\n    const unformatted = await editorRef.current.getValue();\r\n    const formatted = prettier\r\n      .format(unformatted, {\r\n        parser: \"babel\",\r\n        plugins: [parser],\r\n        useTabs: false,\r\n        semi: true,\r\n        singleQuote: true,\r\n      }).replace(/\\n$/,\"\");\r\n    await editorRef.current.setValue(formatted);\r\n  };\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <button\r\n        className=\"button button-format is-primary is-small\"\r\n        onClick={onClickHandler}\r\n      >\r\n        Format\r\n      </button>\r\n      <Editor\r\n        onMount={handleEditorDidMount}\r\n        value={initialValue}\r\n        theme=\"vs-dark\"\r\n        language=\"javascript\"\r\n        height=\"100%\"\r\n        onChange={handleEditorChange}\r\n        options={{\r\n          wordWrap: \"on\",\r\n          minimap: { enabled: false },\r\n          showUnused: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 16,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","import \"./codeCell.css\"\r\nimport { useEffect } from \"react\";\r\nimport Preview from \"./Preview\";\r\nimport Resizeable from \"./resizeableBox\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport { Cell } from \"../redux/cells\";\r\nimport { useAction } from \"../hooks/useAction\";\r\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\r\nimport { useCumalativeCode } from \"../hooks/useCumalativeCode\";\r\n\r\ninterface CodeCellProps {\r\n  cell: Cell;\r\n}\r\n\r\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\r\n  const { updateCell, createBundle } = useAction();\r\n  const bundle = useTypeSelector(\r\n    (state) => state.bundles && state.bundles[cell.id]\r\n  );\r\n  const cumalativeCode = useCumalativeCode(cell.id)\r\n  \r\n\r\n  useEffect(() => {\r\n    if(!bundle){\r\n      createBundle(cell.id,cumalativeCode)\r\n      return\r\n    }\r\n    const timer = setTimeout(async () => {\r\n      createBundle(cell.id, cumalativeCode);\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [cell.id, cumalativeCode, createBundle]);\r\n  \r\n\r\n  return (\r\n    <Resizeable direction=\"vertical\">\r\n      <div\r\n        style={{\r\n          height: \"calc(100% - 10px)\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <Resizeable direction=\"horizontal\">\r\n          <CodeEditor\r\n            onChangeEvent={(value) => updateCell(cell.id, value)}\r\n            initialValue={cell.content}\r\n          />\r\n        </Resizeable>\r\n        {!bundle || bundle.loading ? (\r\n          <div className=\"progress-cover\">\r\n            <progress className=\"progress is-small is-primary\" max=\"100\">\r\n              Loading\r\n            </progress>\r\n          </div>\r\n        ) : (\r\n          <Preview code={bundle.code} err={bundle.err} />\r\n        )}\r\n      </div>\r\n    </Resizeable>\r\n  );\r\n};\r\n\r\nexport default CodeCell;\r\n","import { useTypeSelector } from \"../hooks/useTypeSelector\";\r\n\r\nexport const useCumalativeCode = (cellId: string) => {\r\n  return useTypeSelector((state) => {\r\n    const { data, order } = state.cells;\r\n    const orderedCells = order.map((id) => data[id]);\r\n\r\n    const showFunc = `\r\n        import _React from 'react';\r\n        import _ReactDOM from 'react-dom';\r\n        var show = (value) => {\r\n          const root = document.querySelector('#root');\r\n    \r\n          if (typeof value === 'object') {\r\n            if (value.$$typeof && value.props) {\r\n              _ReactDOM.render(value, root);\r\n            } else {\r\n              root.innerHTML = JSON.stringify(value);\r\n            }\r\n          } else {\r\n            root.innerHTML = value;\r\n          }\r\n        };\r\n      `;\r\n    const showFuncNoop = \"var show = () => {}\";\r\n    const cumalativeCode = [];\r\n    for (let c of orderedCells) {\r\n      if (c.type === \"code\") {\r\n        if (c.id === cellId) {\r\n          cumalativeCode.push(showFunc);\r\n        } else {\r\n          cumalativeCode.push(showFuncNoop);\r\n        }\r\n        cumalativeCode.push(c.content);\r\n      }\r\n      if (c.id === cellId) {\r\n        break;\r\n      }\r\n    }\r\n    return cumalativeCode;\r\n  }).join(\"\\n\");\r\n};\r\n","import { useEffect, useState,useRef } from 'react';\r\nimport MDEditor from '@uiw/react-md-editor';\r\nimport \"./textEditor.css\"\r\nimport { Cell } from '../redux/cells';\r\nimport { useAction } from '../hooks/useAction';\r\n\r\ninterface TextEditorProps{\r\n    cell: Cell\r\n}\r\n\r\nconst TextEditor: React.FC<TextEditorProps> = ({cell}) => {\r\n    const editor = useRef<any>()\r\n    const markDown = useRef<any>()\r\n    const [editing,setEditing] = useState(true)\r\n    const {updateCell} = useAction()\r\n    useEffect(()=>{\r\n        let listener:any\r\n        listener = (event:MouseEvent) => {\r\n            if(editor.current && event.target && editor.current.contains(event.target)){\r\n                return\r\n            }else if(markDown.current && event.target && markDown.current.contains(event.target)){\r\n                setEditing(true)\r\n            }\r\n            else{\r\n                setEditing(false)\r\n            }\r\n        }\r\n        window.addEventListener(\"click\",listener,)\r\n\r\n        return () => {\r\n            window.removeEventListener(\"click\",listener)\r\n        }\r\n    },[cell.content])\r\n    const changeHandler = (text:string | undefined) =>{\r\n        if(!text){\r\n            updateCell(cell.id,\"Click here to edit\")\r\n        }\r\n        else{\r\n            updateCell(cell.id,text)\r\n        }\r\n    }\r\n    if(editing){ return (\r\n        <div ref={editor} className=\"text-editor\" >\r\n          <MDEditor\r\n            value={cell.content}\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n    )}else{\r\n        return (\r\n            <div className=\"markdown-box\" ref={markDown}>\r\n              <MDEditor.Markdown source={cell.content} />\r\n              <div className=\"edit-notice\">Click here to edit</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextEditor","import \"./cellListItem.css\";\r\nimport { Cell } from \"../redux/cells\";\r\nimport ActionBar from \"./actionBar\";\r\nimport CodeCell from \"./codeCell\";\r\nimport TextEditor from \"./textEditor\";\r\n\r\ninterface CellListItemProps {\r\n  cell: Cell;\r\n}\r\n\r\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\r\n  let child: JSX.Element;\r\n  if (cell.type === \"code\") {\r\n    child = (\r\n      <>\r\n        <div className=\"action-bar-wrapper\">\r\n          <ActionBar id={cell.id} />\r\n        </div>\r\n        <CodeCell cell={cell} />\r\n      </>\r\n    );\r\n  } else {\r\n    child = (\r\n    <>\r\n    <div>\r\n    <TextEditor cell={cell} />\r\n    </div>\r\n    <ActionBar id={cell.id}/>\r\n    </>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"cell-list-item\">\r\n      {child}\r\n      <ActionBar id={cell.id} />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CellListItem;\r\n","import { useTypeSelector } from \"../hooks/useTypeSelector\"\r\nimport AddCell from \"./addCell\"\r\nimport CellListItem from \"./cellListItem\"\r\nconst CellList : React.FC = () =>{\r\n    const cells = useTypeSelector(({cells:{order,data}})=>order.map(id=>data[id]))\r\n    const renderedCells = cells.map(cell => <div key={cell.id}><AddCell forceVisible={false} nextCellId={cell.id}/> <CellListItem cell={cell}/></div>)\r\n    return (\r\n    <div>\r\n        {renderedCells}\r\n        <AddCell forceVisible={true} nextCellId={null}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CellList","import { Link, NavLink } from \"react-router-dom\"\r\n\r\ninterface HeaderProps{\r\n\r\n}\r\nconst Header : React.FC<HeaderProps> = () =>{\r\n    return <nav>\r\n        <div>\r\n        <NavLink to=\"/\">Home</NavLink>\r\n        <hr/>\r\n        <NavLink to=\"/guide\">Documentation</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/react-pic1.eb303b76.jpg\";","export default __webpack_public_path__ + \"static/media/react-pic2.b009b558.jpg\";","export default __webpack_public_path__ + \"static/media/react-pic3.d529934c.jpg\";","import example1 from \"../pictures/react-pic1.jpg\"\r\nimport example2 from \"../pictures/react-pic2.jpg\"\r\nimport example2a from \"../pictures/react-pic3.jpg\"\r\n\r\nconst Guide: React.FC = () =>{\r\n    return <div>\r\n        Using React-The app support npm module downloads.Import React like a normal react-app and then render it using ReactDOM\r\n        <img src={example1} alt=\"example1\"/>\r\n        To display javascript data use built-in function show(). show() also supports HTML elements.\r\n        <img src={example2} alt=\"example2\"/>\r\n        <br/>\r\n        <img src={example2a} alt=\"example2\"/>\r\n    </div>\r\n}\r\n\r\nexport default Guide","import CellList from \"./components/cellList\";\r\nimport startService from \"./bundler/startBundler\";\r\nimport Header from \"./components/header\";\r\nimport { Route,Switch } from \"react-router\";\r\nimport Guide from \"./components/guide\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst App = () => {\r\n  useEffect(()=>{\r\n    startService()\r\n  },[])\r\n  return (\r\n    <div >\r\n      <Header/>\r\n      <Switch>\r\n      <Route path=\"/guide\" component={Guide}/>\r\n      <Route path=\"/\" component={CellList}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"bulmaswatch/superhero/bulmaswatch.min.css\"\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\"\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\"\r\nimport {store} from \"./redux\"\r\nimport { BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}